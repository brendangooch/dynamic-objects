BUGS:
    (none)


v2.0.0 - completely refactored
    
    updated with latest config templates

    DynamicUnit vastly simplified
        implemented Decorator pattern for additional functionality (ie inverted unit returns 1 -> 0)

    refactored other classes to reflect changes to DynamicUnit

    created separate DynamicVector and DynamicBezier classes
    DynamicPosition now uses those classes internally

    added speed() method to number, vector, bezier, position so client can set speed OR duration
    added changeBy()/moveBy() methods to number, vector, bezier, position as a convenience to client
    
    TESTED ALL FUNCTIONALITY VISUALLY + ALL JEST TESTS PASS



v3.0.0
    
    completely re-factored core DynamicObjects:
        unit
        number
        vector
        bezier
    
    implemented the Template Method Pattern to vastly reduce code duplication

    added clone() method to DynamicUnit, BaseDynamicUnit & decorators
        clone() returns a new iDynamicUnit object with the same ease and duration applied (but not internal state)
    
    changeTo() method now returns the set or calculated duration, which is very useful for the client

    removed changeBy/moveBy() methods as easily implemented by client in any case and not many use cases in reality


    added:

    DynamicNumberExtended
        accepts min and max params
        provides get rounded(), get roundedUp(), get roundedDown() in addition to current()
        provides useful additional methods, which work instantly or dynamically:
            changeToOriginal() - changes number back to the initial value on instantiation
            changeToMax() - changes number to max value passed on instantiation
            changeToMin() - changes number to min value passed on instantiation
            changeToPrevious() - changes number to its previous current value

    DynamicString
        a user-defined, changeable string that lengthens over time from empty to full string
        client can set duration and ease
        useful effect for a game console window

    

    TESTED ALL FUNCTIONALITY VISUALLY + ALL JEST TESTS PASS



future plans:
    look for a better way to persist objects without exposing internal properties - Memento pattern?    
    there is a more elegant design using an abstract base class and the template method pattern



